<?xml version="1.0"?>
<robot name="neor_mini_foxy" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <link name="base_link">
    <!-- avoid root link inertia warnings, annotation -->
    <inertial>
      <origin
        xyz="0.030649671440691 -1.79069899872708E-05 0.0558717976709459"
        rpy="0 0 0" />
      <mass
        value="1.72617713171385" />
      <inertia
        ixx="0.0107311274569357"
        ixy="-3.24164649120244E-08"
        ixz="0.00169188715816868"
        iyy="0.0198871551919603" 
        iyz="2.40252669081509E-07"
        izz="0.0269841937242323" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find neor_mini_foxy)/meshes/base_link.stl"/>
      </geometry>
      <material name="">
      <color rgba="0.250980392156863 0.250980392156863 0.250980392156863 1" /> 
      </material> 
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find neor_mini_foxy)/meshes/base_link.stl" />
      </geometry>
    </collision>
  </link>

  <link
    name="left_rear_link">
    <inertial>
      <origin
        xyz="7.85229659072684E-11 -0.0196762547002777 4.85059770127805E-11"
        rpy="0 0 0" />
      <mass
        value="0.29556182905038" />
      <inertia
        ixx="0.000374087423652291"
        ixy="2.19336154342606E-13"
        ixz="-5.50404301757561E-12"
        iyy="0.000661017199375587"
        iyz="-5.10049385981967E-14"
        izz="0.000374087441459994" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find neor_mini_foxy)/meshes/left_rear_link.stl" />
      </geometry>
      <material
        name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find neor_mini_foxy)/meshes/left_rear_link.stl" />
      </geometry>
    </collision>
  </link>
  <joint name="left_rear_joint" type="continuous">
    <origin xyz="-0.181499999999595 0.228542434993694 0.0399999999991634" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="left_rear_link" />
    <axis xyz="0 1 0" />
    <limit effort="100" velocity="5" />
  </joint>
  <link name="right_rear_link">
    <inertial>
      <origin
        xyz="7.8521189550429E-11 0.0196762545376323 3.35983463273237E-11"
        rpy="0 0 0" />
      <mass
        value="0.295561829050389" />
      <inertia
        ixx="0.000374087423652306"
        ixy="-2.1933774523493E-13"
        ixz="5.50404145624456E-12"
        iyy="0.000661017199375601"
        iyz="-5.10073974604221E-14"
        izz="0.000374087441459995" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find neor_mini_foxy)/meshes/right_rear_link.stl" />
      </geometry>
      <material
        name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find neor_mini_foxy)/meshes/right_rear_link.stl" />
      </geometry>
    </collision>
  </link>
  <joint name="right_rear_joint" type="continuous">
    <origin xyz="-0.181499999999595 -0.228542434994426 0.0399999999991584" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="right_rear_link" />
    <axis xyz="0 1 0" />
    <limit effort="100" velocity="5" />
  </joint>

<!-- In order to fit ackermann simulation plugins's request,amend the front steer link and it's joint -->
 <link name="front_steer_right_link">
 <inertial>  
      <origin xyz="9.44636555644252E-08 -0.000295273745285485 -8.13046296954667E-11" rpy="0 0 0" />
      <mass value="0.296315811300368" /> 
      <inertia
        ixx="0.000374692013709393"
        ixy="-9.17172260383823E-08"
        ixz="-2.43187512356516E-12"
        iyy="0.000661029987747155"
        iyz="1.9736939507106E-13"
        izz="0.000374691963930348" />
    </inertial>
   <visual>
     <geometry>
       <cylinder length="0.001" radius="0.005"/>
     </geometry>
     <origin rpy="0 0 0"  xyz="0 0 0" />
     <material name=""> 
          <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
     </material>
   </visual>
   <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
       <cylinder length="0.001" radius="0.005"/>
      </geometry>
    </collision>
 </link>
 <joint name="front_steer_right_joint" type="revolute">
    <origin rpy="0 0 0"  xyz="0.17 -0.21 0.102" />
    <parent link="base_link" />
    <child link="front_steer_right_link" />
    <axis xyz="0 0 1" />
    <limit lower="-0.69" upper="0.69" effort="100" velocity="5" />
 </joint>
<!-- ************************************************************************************* -->

  <link
    name="front_right_wheel_link">
    <inertial>
      <origin
        xyz="9.44636555644252E-08 -0.000295273745285485 -8.13046296954667E-11"
        rpy="0 0 0" />
      <mass value="0.296315811300368" />
      <inertia
        ixx="0.000374692013709393"
        ixy="-9.17172260383823E-08"
        ixz="-2.43187512356516E-12"
        iyy="0.000661029987747155"
        iyz="1.9736939507106E-13"
        izz="0.000374691963930348" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find neor_mini_foxy)/meshes/front_right_wheel_link.stl" />
      </geometry>
      <material
        name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find neor_mini_foxy)/meshes/front_right_wheel_link.stl" />
      </geometry>
    </collision>
  </link>
  <joint name="front_right_wheel_joint" type="continuous">
    <origin xyz="0 0 -0.06" rpy="0 0 0" />
    <parent link="front_steer_right_link" />
    <child  link="front_right_wheel_link" />
    <axis xyz="0 1 0" />
  </joint>

<!-- In order to fit ackermann simulation plugins's request,amend the front steer link and it's joint -->
 <link name="front_steer_left_link">
    <inertial> 
      <origin xyz="9.44636555644252E-08 -0.000295273745285485 -8.13046296954667E-11" rpy="0 0 0" />
      <mass value="0.296315811300368" /> 
      <inertia
        ixx="0.000374692013709393"
        ixy="-9.17172260383823E-08"
        ixz="-2.43187512356516E-12"
        iyy="0.000661029987747155"
        iyz="1.9736939507106E-13"
        izz="0.000374691963930348" />
    </inertial>
   <visual>
     <geometry>
       <cylinder length="0.001" radius="0.005"/>
     </geometry>
     <origin rpy="0 0 0"  xyz="0 0 0" />
   </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
       <cylinder length="0.001" radius="0.005"/>
      </geometry>
    </collision>
 </link>
 <joint name="front_steer_left_joint" type="revolute">
    <origin rpy="0 0 0"  xyz="0.17 0.21 0.102" />
    <parent link="base_link" />
    <child link="front_steer_left_link" />
    <axis xyz="0 0 1" />
    <limit lower="-0.69" upper="0.69" effort="100" velocity="5" />
 </joint>
<!-- ************************************************************************************* -->

  <link
    name="front_left_wheel_link">
    <inertial>
      <origin
        xyz="-3.99413835339146E-11 0.000295273997845347 1.08602016268833E-10"
        rpy="0 0 0" />
      <mass
        value="0.296315811293944" />
      <inertia
        ixx="0.00037469197851121"
        ixy="-1.84493877596723E-13"
        ixz="-9.50756757097929E-12"
        iyy="0.00066103001709398"
        iyz="-1.17866882205563E-13"
        izz="0.000374691969713977" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find neor_mini_foxy)/meshes/front_left_wheel_link.stl" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="file://$(find neor_mini_foxy)/meshes/front_left_wheel_link.stl" />
      </geometry>
    </collision>
  </link>
  <joint name="front_left_wheel_joint" type="continuous">
    <origin xyz="0 0 -0.06" rpy="0 0 0" />     
    <parent link="front_steer_left_link" />
    <child link="front_left_wheel_link" />
    <axis xyz="0 1 0" /> 
  </joint>


  <!--  add laser link -->
  <link name="laser_link">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.03"/>
      </geometry>
    </visual>
  </link>
  <joint name ="2Dlaser_joints" type="fixed">
    <origin xyz="0.0 0.0 0.13" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="laser_link"/>
  </joint>
    <!--  add laser link -->
  <!--
  <link name="laser_link2">
    <visual>
      <geometry>
        <cylinder length="0.03" radius="0.02"/>
      </geometry>
    </visual>
  </link>
  <joint name ="2Dlaser_joints2" type="fixed">
    <origin xyz="0.03 0.0 0.112" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="laser_link2"/>
  </joint>
  -->
  <!--*********************************************************************-->
 
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.01 0.06 0.017"/>
      </geometry>
    </visual>
  </link>
  <joint name ="camera_joints" type="fixed">
    <origin xyz="0.12 0.0 0.12" rpy="0.0 0.0 0.0"/>   
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  <!--*********************************************************************-->

  <!--  add imu link   -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.015 0.015 0.007"/>
      </geometry>
    </visual>
  </link>
  <joint name ="imu_joints" type="fixed">
    <origin xyz="-0.10 0.0 0.02" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <!--*********************************************************************-->

  <!--  add gps link   -->
  <link name="gps_link">
    <visual>
      <geometry>
        <cylinder length="0.02" radius="0.02"/>
      </geometry>
    </visual>
  </link>
  <joint name ="gps_joints" type="fixed">
    <origin xyz="-0.181499999999595 0.0 0.09" rpy="0.0 0.0 0.0"/>
    <parent link="base_link"/>
    <child link="gps_link"/>
  </joint>
  <!--*********************************************************************-->


  <!--add color for links -->
  <gazebo reference="base_link">
    <material>Gazebo/DarkGrey </material>
  </gazebo>

  <gazebo reference="front_steer_left_link">
    <material>Gazebo/Road</material>
  </gazebo>

  <gazebo reference="front_steer_right_link">
    <material>Gazebo/Road</material>
  </gazebo>

  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/Road</material>
  </gazebo>

  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/Road</material>
  </gazebo>
  
  <gazebo reference="left_rear_link">
    <material>Gazebo/Road</material>
  </gazebo>

  <gazebo reference="right_rear_link">
    <material>Gazebo/Road</material>
  </gazebo>

  <gazebo reference="laser_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!--
  <gazebo reference="laser_link2">
    <material>Gazebo/GreyTransparent</material>
  </gazebo>
  -->
   <gazebo reference="camera_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="imu_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="gps_link">
      <material>Gazebo/Grey</material>
  </gazebo>
  <!--*********************************************************************-->

  <!-- add laser senser -->
  <gazebo reference="laser_link">
    <sensor type="ray" name="laser_scanner">
    <always_on>true</always_on>
    <visualize>false</visualize>
    <update_rate>10</update_rate>
    <ray>
      <scan>
        <horizontal>
          <samples>1440</samples>
          <resolution>1</resolution>
          <min_angle>${-pi}</min_angle>
          <max_angle>${pi}</max_angle>
        </horizontal>
      </scan>
      <range>
        <min>0.10</min>
        <max>120.0</max>
        <resolution>0.01</resolution>
      </range>
      <noise>
        <type>gaussian</type>
        <!-- Noise parameters based on published spec for Hokuyo laser
        achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
        stddev of 0.01m will put 99.7% of samples within 0.03m of the true
        reading. -->
        <mean>0.0</mean>
        <stddev>0.01</stddev>
      </noise>
    </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- add camera senser -->
     <gazebo reference="camera_link">
        <material>Gazebo/Black</material>
        <sensor type="camera" name="camera1">
            <update_rate>30.0</update_rate>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>rrbot/camera1</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>

  <!-- add imu sensor -->
      <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <ros>
            <namespace>/</namespace>
            <remapping>~/out:=imu</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>
    </gazebo>

  <!-- add gps sensor -->
  <gazebo reference="gps_link">
    <sensor name="gps_sensor" type="gps">
        <always_on>true</always_on>
        <update_rate>10.0</update_rate>
        <gps>
            <position_sensing>
              <horizontal>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </horizontal>
              <vertical>
                <noise type="gaussian">
                  <mean>0.0</mean>
                  <stddev>2e-4</stddev>
                </noise>
              </vertical>
            </position_sensing>
        </gps>
        <plugin name="gps_controller" filename="libgazebo_ros_gps_sensor.so">
            <ros>
                <remapping>gps_controller/out:=gps</remapping>
            </ros>
              <surface_model>EARTH_WGS84</surface_model> 
              <latitude_deg>-37.644121</latitude_deg>
              <longitude_deg>176.183812</longitude_deg>
              <elevation>0</elevation>
              <heading_deg>0</heading_deg> 
            <frame_name>gps_link</frame_name>
        </plugin>
    </sensor>
  </gazebo>


  <gazebo>
    <plugin name="neor_mini_gazebo_plugin" filename="libneor_mini_gazebo_plugin.so">
    </plugin>
  </gazebo>

  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <xacro:VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points" organize_cloud="false" hz="10" samples="440" gpu="false">
    <origin xyz="0 0 0.15" rpy="0 0 0" />
  </xacro:VLP-16>

</robot>